// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using entities;

namespace entities.Migrations
{
    [DbContext(typeof(EFApplicationContext))]
    partial class EFApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("entities.entidades.Xpto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnName("data_exclusao");

                    b.Property<double>("TotalDadosVolPlanejado1")
                        .HasColumnName("total_dados_vol_planejado1");

                    b.Property<double>("TotalDadosVolPlanejado10")
                        .HasColumnName("total_dados_vol_planejado10");

                    b.Property<double>("TotalDadosVolPlanejado11")
                        .HasColumnName("total_dados_vol_planejado11");

                    b.Property<double>("TotalDadosVolPlanejado2")
                        .HasColumnName("total_dados_vol_planejado2");

                    b.Property<double>("TotalDadosVolPlanejado3")
                        .HasColumnName("total_dados_vol_planejado3");

                    b.Property<double>("TotalDadosVolPlanejado4")
                        .HasColumnName("total_dados_vol_planejado4");

                    b.Property<double>("TotalDadosVolPlanejado5")
                        .HasColumnName("total_dados_vol_planejado5");

                    b.Property<double>("TotalDadosVolPlanejado6")
                        .HasColumnName("total_dados_vol_planejado6");

                    b.Property<double>("TotalDadosVolPlanejado7")
                        .HasColumnName("total_dados_vol_planejado7");

                    b.Property<double>("TotalDadosVolPlanejado8")
                        .HasColumnName("total_dados_vol_planejado8");

                    b.Property<double>("TotalDadosVolPlanejado9")
                        .HasColumnName("total_dados_vol_planejado9");

                    b.Property<double>("TotalDadosVolProduzido1")
                        .HasColumnName("total_dados_vol_produzido1");

                    b.Property<double>("TotalDadosVolProduzido10")
                        .HasColumnName("total_dados_vol_produzido10");

                    b.Property<double>("TotalDadosVolProduzido11")
                        .HasColumnName("total_dados_vol_produzido11");

                    b.Property<double>("TotalDadosVolProduzido2")
                        .HasColumnName("total_dados_vol_produzido2");

                    b.Property<double>("TotalDadosVolProduzido3")
                        .HasColumnName("total_dados_vol_produzido3");

                    b.Property<double>("TotalDadosVolProduzido4")
                        .HasColumnName("total_dados_vol_produzido4");

                    b.Property<double>("TotalDadosVolProduzido5")
                        .HasColumnName("total_dados_vol_produzido5");

                    b.Property<double>("TotalDadosVolProduzido6")
                        .HasColumnName("total_dados_vol_produzido6");

                    b.Property<double>("TotalDadosVolProduzido7")
                        .HasColumnName("total_dados_vol_produzido7");

                    b.Property<double>("TotalDadosVolProduzido8")
                        .HasColumnName("total_dados_vol_produzido8");

                    b.Property<double>("TotalDadosVolProduzido9")
                        .HasColumnName("total_dados_vol_produzido9");

                    b.HasKey("Id")
                        .HasName("pk_xpto");

                    b.ToTable("xpto","entidades");
                });

            modelBuilder.Entity("entities.xpto.VolumePlanejado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<double>("DadosVolPlanejado1")
                        .HasColumnName("dados_vol_planejado1");

                    b.Property<double>("DadosVolPlanejado10")
                        .HasColumnName("dados_vol_planejado10");

                    b.Property<double>("DadosVolPlanejado11")
                        .HasColumnName("dados_vol_planejado11");

                    b.Property<double>("DadosVolPlanejado2")
                        .HasColumnName("dados_vol_planejado2");

                    b.Property<double>("DadosVolPlanejado3")
                        .HasColumnName("dados_vol_planejado3");

                    b.Property<double>("DadosVolPlanejado4")
                        .HasColumnName("dados_vol_planejado4");

                    b.Property<double>("DadosVolPlanejado5")
                        .HasColumnName("dados_vol_planejado5");

                    b.Property<double>("DadosVolPlanejado6")
                        .HasColumnName("dados_vol_planejado6");

                    b.Property<double>("DadosVolPlanejado7")
                        .HasColumnName("dados_vol_planejado7");

                    b.Property<double>("DadosVolPlanejado8")
                        .HasColumnName("dados_vol_planejado8");

                    b.Property<double>("DadosVolPlanejado9")
                        .HasColumnName("dados_vol_planejado9");

                    b.HasKey("Id")
                        .HasName("pk_volume_planejado");

                    b.ToTable("volume_planejado","xpto");
                });

            modelBuilder.Entity("entities.xpto.VolumeProduzido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<double>("DadosVolProduzido1")
                        .HasColumnName("dados_vol_produzido1");

                    b.Property<double>("DadosVolProduzido10")
                        .HasColumnName("dados_vol_produzido10");

                    b.Property<double>("DadosVolProduzido11")
                        .HasColumnName("dados_vol_produzido11");

                    b.Property<double>("DadosVolProduzido2")
                        .HasColumnName("dados_vol_produzido2");

                    b.Property<double>("DadosVolProduzido3")
                        .HasColumnName("dados_vol_produzido3");

                    b.Property<double>("DadosVolProduzido4")
                        .HasColumnName("dados_vol_produzido4");

                    b.Property<double>("DadosVolProduzido5")
                        .HasColumnName("dados_vol_produzido5");

                    b.Property<double>("DadosVolProduzido6")
                        .HasColumnName("dados_vol_produzido6");

                    b.Property<double>("DadosVolProduzido7")
                        .HasColumnName("dados_vol_produzido7");

                    b.Property<double>("DadosVolProduzido8")
                        .HasColumnName("dados_vol_produzido8");

                    b.Property<double>("DadosVolProduzido9")
                        .HasColumnName("dados_vol_produzido9");

                    b.Property<double>("Total")
                        .HasColumnName("total");

                    b.HasKey("Id")
                        .HasName("pk_volume_produzido");

                    b.ToTable("volume_produzido","xpto");
                });

            modelBuilder.Entity("seguranca.Modulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<string>("Codigo")
                        .HasColumnName("codigo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnName("data_exclusao");

                    b.Property<bool>("Desativado")
                        .HasColumnName("desativado");

                    b.Property<string>("Nome")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_modulo");

                    b.ToTable("modulo","seguranca");
                });

            modelBuilder.Entity("seguranca.Perfil", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnName("concurrency_stamp");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<bool>("Desativado")
                        .HasColumnName("desativado");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnName("normalized_name")
                        .HasMaxLength(256);

                    b.HasKey("Id")
                        .HasName("pk_aspnetroles");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("role_name_index");

                    b.ToTable("aspnetroles","seguranca");
                });

            modelBuilder.Entity("seguranca.PerfilClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("ClaimType")
                        .HasColumnName("claim_type");

                    b.Property<string>("ClaimValue")
                        .HasColumnName("claim_value");

                    b.Property<Guid>("RoleId")
                        .HasColumnName("role_id");

                    b.HasKey("Id")
                        .HasName("pk_aspnetroleclaims");

                    b.HasIndex("RoleId")
                        .HasName("ix_aspnetroleclaims_role_id");

                    b.ToTable("aspnetroleclaims","seguranca");
                });

            modelBuilder.Entity("seguranca.PerfilModulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnName("data_exclusao");

                    b.Property<bool>("Desativado")
                        .HasColumnName("desativado");

                    b.Property<Guid>("ModuloId")
                        .HasColumnName("modulo_id");

                    b.Property<Guid>("PerfilId")
                        .HasColumnName("perfil_id");

                    b.HasKey("Id")
                        .HasName("pk_perfil_modulo");

                    b.HasIndex("ModuloId")
                        .HasName("ix_perfil_modulo_modulo_id");

                    b.HasIndex("PerfilId")
                        .HasName("ix_perfil_modulo_perfil_id");

                    b.ToTable("perfil_modulo","seguranca");
                });

            modelBuilder.Entity("seguranca.PerfilModuloPermissao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnName("data_exclusao");

                    b.Property<bool>("Desativado")
                        .HasColumnName("desativado");

                    b.Property<Guid>("PerfilModuloId")
                        .HasColumnName("perfil_modulo_id");

                    b.Property<Guid>("PermissaoId")
                        .HasColumnName("permissao_id");

                    b.HasKey("Id")
                        .HasName("pk_modulo_permissao");

                    b.HasIndex("PerfilModuloId")
                        .HasName("ix_modulo_permissao_perfil_modulo_id");

                    b.HasIndex("PermissaoId")
                        .HasName("ix_modulo_permissao_permissao_id");

                    b.ToTable("modulo_permissao","seguranca");
                });

            modelBuilder.Entity("seguranca.Permissao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<string>("Codigo")
                        .HasColumnName("codigo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnName("data_exclusao");

                    b.Property<bool>("Desativado")
                        .HasColumnName("desativado");

                    b.Property<string>("Nome")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_permissao");

                    b.ToTable("permissao","seguranca");
                });

            modelBuilder.Entity("seguranca.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnName("access_failed_count");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnName("concurrency_stamp");

                    b.Property<string>("CpjCnpj")
                        .HasColumnName("cpj_cnpj")
                        .HasMaxLength(14);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao");

                    b.Property<bool>("Desativado")
                        .HasColumnName("desativado");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnName("email_confirmed");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnName("lockout_enabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnName("lockout_end");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(40);

                    b.Property<string>("NormalizedEmail")
                        .HasColumnName("normalized_email")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnName("normalized_user_name")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("phone_number");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnName("phone_number_confirmed");

                    b.Property<string>("SecurityStamp")
                        .HasColumnName("security_stamp");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnName("two_factor_enabled");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name")
                        .HasMaxLength(256);

                    b.HasKey("Id")
                        .HasName("pk_aspnetusers");

                    b.HasIndex("NormalizedEmail")
                        .HasName("email_index");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("user_name_index");

                    b.ToTable("aspnetusers","seguranca");
                });

            modelBuilder.Entity("seguranca.UsuarioClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("ClaimType")
                        .HasColumnName("claim_type");

                    b.Property<string>("ClaimValue")
                        .HasColumnName("claim_value");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_aspnetuserclaims");

                    b.HasIndex("UserId")
                        .HasName("ix_aspnetuserclaims_user_id");

                    b.ToTable("aspnetuserclaims","seguranca");
                });

            modelBuilder.Entity("seguranca.UsuarioLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnName("login_provider");

                    b.Property<string>("ProviderKey")
                        .HasColumnName("provider_key");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnName("provider_display_name");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("LoginProvider", "ProviderKey")
                        .HasName("pk_aspnetuserlogins");

                    b.HasIndex("UserId")
                        .HasName("ix_aspnetuserlogins_user_id");

                    b.ToTable("aspnetuserlogins","seguranca");
                });

            modelBuilder.Entity("seguranca.UsuarioPerfil", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.Property<Guid>("RoleId")
                        .HasColumnName("role_id");

                    b.HasKey("UserId", "RoleId")
                        .HasName("pk_aspnetuserroles");

                    b.HasIndex("RoleId")
                        .HasName("ix_aspnetuserroles_role_id");

                    b.ToTable("aspnetuserroles","seguranca");
                });

            modelBuilder.Entity("seguranca.UsuarioToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("LoginProvider")
                        .HasColumnName("login_provider");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("Value")
                        .HasColumnName("value");

                    b.HasKey("UserId", "LoginProvider", "Name")
                        .HasName("pk_aspnetusertokens");

                    b.ToTable("aspnetusertokens","seguranca");
                });

            modelBuilder.Entity("seguranca.PerfilClaim", b =>
                {
                    b.HasOne("seguranca.Perfil")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_aspnetroleclaims_aspnetroles_role_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("seguranca.PerfilModulo", b =>
                {
                    b.HasOne("seguranca.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloId")
                        .HasConstraintName("fk_perfil_modulo_modulo_modulo_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("seguranca.Perfil", "Perfil")
                        .WithMany("Modulos")
                        .HasForeignKey("PerfilId")
                        .HasConstraintName("fk_perfil_modulo_aspnetroles_perfil_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("seguranca.PerfilModuloPermissao", b =>
                {
                    b.HasOne("seguranca.PerfilModulo", "PerfilModulo")
                        .WithMany("Permissoes")
                        .HasForeignKey("PerfilModuloId")
                        .HasConstraintName("fk_modulo_permissao_perfil_modulo_perfil_modulo_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("seguranca.Permissao", "Permissao")
                        .WithMany()
                        .HasForeignKey("PermissaoId")
                        .HasConstraintName("fk_modulo_permissao_permissao_permissao_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("seguranca.UsuarioClaim", b =>
                {
                    b.HasOne("seguranca.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_aspnetuserclaims_aspnetusers_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("seguranca.UsuarioLogin", b =>
                {
                    b.HasOne("seguranca.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_aspnetuserlogins_aspnetusers_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("seguranca.UsuarioPerfil", b =>
                {
                    b.HasOne("seguranca.Perfil", "Role")
                        .WithMany("Papeis")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_aspnetuserroles_aspnetroles_role_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("seguranca.Usuario", "User")
                        .WithMany("Papeis")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_aspnetuserroles_aspnetusers_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("seguranca.UsuarioToken", b =>
                {
                    b.HasOne("seguranca.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_aspnetusertokens_aspnetusers_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
